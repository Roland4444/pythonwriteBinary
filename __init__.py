# -*- coding: utf-8 -*-
import os
import time
f = open("guru99.txt", "w+")
f.write("This is line ")
f.close()
newFileBytes = bytes([0xaa, 0x08, 0x00])
f = open("guru99.txt", "wb+")
f.write(newFileBytes)
f.close()

testheader = bytes([0xaa])
testbody = bytes([0xbb])
testfooter = bytes([0xcc])

print(len(testheader))

template2byte = "44_16Bit.wav"

template3byte = "44_24Bit.wav"
print("size template =>", os.path.getsize(template2byte))


def createfile(inputtemplate, byte_sequence, header, footer, result):
    fullsize = os.path.getsize(template2byte)
    headersize = len(header)
    footersize = len(footer)
    print("fullsize template =>", fullsize)
    print("header size       =>", headersize)
    print("footer size       =>", footersize)
    remain = fullsize - headersize - footersize
    print("data inserted size=>", remain)
    insertseqlen = len(byte_sequence)
    print("byte_sequence size=>", insertseqlen)
    reps = remain / insertseqlen
    print("reps              =>", reps)
    resulted = open(result, "wb+")
    print("starting writes")
    resulted.write(header)
    while reps > 0:
        resulted.write(byte_sequence)
        reps = reps - 1
    resulted.write(footer)
    resulted.close()
    print("writing to", result, "compelte!")

f = open("guru99.txt", "wb+")
f.write(testheader)
f.write(testbody)
f.write(testfooter)
f.close()

array2byte1seq = bytes([0xaa, 0xaa, 0x55, 0x55])
array2byte2seq = bytes([0x55, 0x55, 0xaa, 0xaa])
array2byte3seq = bytes([0xaa, 0xaa, 0x00, 0x00])
array2byte4seq = bytes([0x00, 0x00, 0xaa, 0xaa])
array2byte5seq = bytes([0xdb, 0xdb, 0x24, 0x24])
array2byte6seq = bytes([0x24, 0x24, 0xdb, 0xdb])

array3byte1seq = bytes([0xaa, 0xaa, 0xaa, 0x55, 0x55, 0x55])
array3byte2seq = bytes([0x55, 0x55, 0x55, 0xaa, 0xaa, 0xaa])
array3byte3seq = bytes([0x55, 0x55, 0x00, 0xaa, 0xaa, 0x00])
array3byte4seq = bytes([0xaa, 0xaa, 0xaa, 0x00, 0x00, 0x00])
array3byte5seq = bytes([0x00, 0x00, 0x00, 0xaa, 0xaa, 0xaa])
array3byte6seq = bytes([0xdb, 0xdb, 0xdb, 0x24, 0x24, 0x24])
array3byte7seq = bytes([0x24, 0x24, 0x24, 0xdb, 0xdb, 0xdb])
array3byte8seq = bytes([0xdb, 0xdb, 0x00, 0x24, 0x24, 0x00])
array3byte9seq = bytes([0xdb, 0xdb, 0x00, 0x24, 0x24, 0x00])
array3byte10seq = bytes([0x24, 0x24, 0x00, 0xdb, 0xdb, 0x00])


header2byte = bytes([0x52, 0x49, 0x46, 0x46, 0xF0, 0xFD, 0x4E, 0x06, 0x57, 0x41,
        0x56, 0x45, 0x66, 0x6D, 0x74, 0x20, 0x10, 0x00, 0x00, 0x00, 0x01, 0x00,
        0x02, 0x00, 0x44, 0xAC, 0x00, 0x00, 0x10, 0xB1, 0x02, 0x00, 0x04, 0x00,
        0x10, 0x00, 0x64, 0x61, 0x74, 0x61, 0x80, 0xFD, 0x4E, 0x06])

header3byte = bytes([0x52, 0x49, 0x46, 0x46, 0xB0, 0x7C, 0x76, 0x09, 0x57, 0x41,
 0x56, 0x45, 0x66, 0x6D, 0x74,
 0x20, 0x10, 0x00, 0x00, 0x00, 0x01, 0x00, 0x02, 0x00, 0x44, 0xAC, 0x00,
 0x00, 0x98, 0x09, 0x04, 0x00, 0x06, 0x00,
 0x18, 0x00, 0x64, 0x61, 0x74, 0x61, 0x40, 0x7C, 0x76, 0x09])

footer2byte = bytes([0x4C, 0x49, 0x53, 0x54, 0x44, 0x00, 0x00, 0x00, 0x49,
0x4E, 0x46, 0x4F, 0x49, 0x43, 0x52, 0x44, 0x0B, 0x00, 0x00, 0x00, 0x32, 0x30,
0x31, 0x38, 0x2D, 0x30, 0x38, 0x2D, 0x32,
0x34, 0x00, 0x00, 0x49, 0x45, 0x4E, 0x47, 0x06, 0x00, 0x00, 0x00, 0x20,
0x55, 0x73, 0x65, 0x72, 0x00, 0x49,
0x53, 0x46, 0x54, 0x15, 0x00, 0x00, 0x00, 0x53, 0x6F, 0x75, 0x6E, 0x64,
0x20, 0x46, 0x6F, 0x72, 0x67, 0x65,
0x20, 0x50, 0x72, 0x6F, 0x20, 0x31, 0x31, 0x2E, 0x30, 0x00, 0x02])

footer3byte = bytes([0x4C, 0x49, 0x53, 0x54, 0x44, 0x00, 0x00, 0x00, 0x49,
0x4E, 0x46, 0x4F, 0x49, 0x43, 0x52, 0x44, 0x0B, 0x00, 0x00, 0x00, 0x32, 0x30,
0x31, 0x38, 0x2D, 0x30, 0x38, 0x2D, 0x32, 0x34, 0x00, 0x00, 0x49, 0x45, 0x4E,
0x47, 0x06, 0x00, 0x00, 0x00, 0x20, 0x55, 0x73, 0x65, 0x72, 0x00, 0x49, 0x53,
0x46, 0x54, 0x15, 0x00, 0x00, 0x00, 0x53, 0x6F, 0x75, 0x6E, 0x64, 0x20, 0x46,
0x6F, 0x72, 0x67, 0x65, 0x20, 0x50, 0x72, 0x6F, 0x20, 0x31, 0x31, 0x2E, 0x30,
0x00, 0x02])

arr2bytesseq = [array2byte1seq, array2byte2seq, array2byte3seq, array2byte4seq,
array2byte5seq, array2byte6seq]

arr3bytesseq = [array3byte1seq, array3byte2seq, array3byte3seq, array3byte4seq,
array3byte5seq, array3byte6seq, array3byte7seq, array3byte8seq, array3byte9seq,
array3byte10seq]

arr2names = ["44_16Bit_1.wav", "44_16Bit_2.wav", "44_16Bit_3.wav",
"44_16Bit_4.wav", "44_16Bit_5.wav", "44_16Bit_6.wav"]

arr3names = ["44_24Bit_1.wav", "44_24Bit_2.wav", "44_24Bit_3.wav",
"44_24Bit_4.wav", "44_24Bit_5.wav", "44_24Bit_6.wav", "44_24Bit_7.wav",
"44_24Bit_8.wav", "44_24Bit_9.wav", "44_24Bit_10.wav"]

start_time = time.time()

print("generate 2bytes files=>>")
for x in range(1, 7):
    createfile(template2byte, arr2bytesseq[x - 1], header2byte, footer2byte,
    arr2names[x - 1])

for y in range(1, 11):
    createfile(template3byte, arr3bytesseq[y - 1], header3byte, footer3byte,
    arr3names[y - 1])

elapsed_time = time.time() - start_time

print("ELAPSED TIME", elapsed_time)